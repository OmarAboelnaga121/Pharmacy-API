// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the Role enum
enum Role {
  ADMIN
  CUSTOMER
  CUSTOMER_SUPPORT
  PHARMACIST
}

// Define the type of notification
enum NotificationType {
  ORDER
  NEWMEDICINE
  MEDICINEOUTOFSTOCK
  MEDICINEINSTOCK
  NEWROLE
}

// Status of the order
enum OrderStatus {
  PENDING
  OUTFORDELIVERY
  DELIVERED
  CANCELLED
}

model User{
  id Int @id@default(autoincrement())
  name String 
  phoneNumber String
  address String
  email String @unique
  password String
  role Role @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  @@map("users")

}

model Medicines{
    id Int @id@default(autoincrement())
    medicinieName String @unique
    Description String
    price Decimal
    stock Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
}

model Orders{
  id Int @id@default(autoincrement())
  medicineId Int
  quantity Int
  status OrderStatus @default(PENDING)
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  @@map("orders")
}

model notification{
  id Int @id@default(autoincrement())
  userId Int
  resourceId Int
  from String
  message String
  type NotificationType
  isRead Boolean @default(false)
  targetRole Role[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}